<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>next主题配置文件</title>
      <link href="/2024/10/30/next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2024/10/30/next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>在D:\HEXO1\blog\node_modules\hexo-theme-next_config.yml修改favicon有效果<br>在blog_config.next.yml修改没效果</p>]]></content>
      
      
      
        <tags>
            
            <tag> question </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>补码公式推导</title>
      <link href="/2024/10/30/%E8%A1%A5%E7%A0%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC/"/>
      <url>/2024/10/30/%E8%A1%A5%E7%A0%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC/</url>
      
        <content type="html"><![CDATA[<h2 id="why-负数-补码-负数-的补码-取反-1"><a href="#why-负数-补码-负数-的补码-取反-1" class="headerlink" title="why [负数]补码&#x3D;[-负数]的补码,取反+1"></a>why [负数]补码&#x3D;[-负数]的补码,取反+1</h2><p>[负数]补+[-负数]补&#x3D;模，在时钟中，模为12，在定点小数中，模为2，在n位整数中模为2^n<br>例如：8位整数<br>[-1]补+[1]补 &#x3D; 11111111+00000001&#x3D;1 0000 0000 &#x3D; 256 &#x3D; 2^8<br>[-x]补+[x]补 &#x3D; 2^n,假设x&gt;0,so: [-x]补+[x]补&#x3D;2^n,即[-x]补+x&#x3D;2^n,so: [-x]补 &#x3D; 2^n-x &#x3D; (2^n-1-x)+1<br>即：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set x=1,[-x]补 = (2^8-1-x)+1 = (11111111-1)+1 = (11111111-00000001)+1</span><br></pre></td></tr></table></figure><p>可以看到括号里面的00000001就是+1的补码，括号的结果就是+1的补码取反的结果<br>即：11111110，+1得到11111111<br><strong>所以常说负数的补码等于其正数的补码取反+1</strong></p><h2 id="例外情况"><a href="#例外情况" class="headerlink" title="例外情况"></a>例外情况</h2><p><strong>从来如此，便一定对吗</strong><br>还是内个熟悉的真值-128<br>假设按上面的求法，[-128]补&#x3D;[128]补,取反+1<br>但是我们发现，128根本没有8位补码，所以只能用公式法求了，[x]补&#x3D;x+256,即:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[-128]=-128+256=1 0000 0000 - 10000000 = (11111111 - 10000000)+1 = 10000000</span><br></pre></td></tr></table></figure><p>会发现这个公式其实与上面的计算过程一样</p><h2 id="所以-负数-补码-正数-补码取反-1不太好"><a href="#所以-负数-补码-正数-补码取反-1不太好" class="headerlink" title="所以[负数]补码&#x3D;[正数]补码取反+1不太好"></a>所以[负数]补码&#x3D;[正数]补码取反+1不太好</h2><p>应为-128对应的负数不存在补码，但是，**[负数]补&#x3D;[正数对应的二进制]取反+1**,这样就适用于任意情况了，这才是正确的公式</p>]]></content>
      
      
      <categories>
          
          <category> 计算机系统基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>补码中特殊的10000000</title>
      <link href="/2024/10/30/%E8%A1%A5%E7%A0%81%E4%B8%AD%E7%89%B9%E6%AE%8A%E7%9A%8410000000/"/>
      <url>/2024/10/30/%E8%A1%A5%E7%A0%81%E4%B8%AD%E7%89%B9%E6%AE%8A%E7%9A%8410000000/</url>
      
        <content type="html"><![CDATA[<h2 id="时钟里的补数"><a href="#时钟里的补数" class="headerlink" title="时钟里的补数"></a>时钟里的补数</h2><p>   现在指向6点，如果想到3点，逆时针拨动3格，顺时针拨动9格到，所以-3和9互为补数</p><h2 id="补码的目的"><a href="#补码的目的" class="headerlink" title="补码的目的"></a>补码的目的</h2><p>计算机里存储的是补码，为了让计算机里存储的数，加减法使用同一套电路，也就是补码加减器，做减法时，+负数的补码，就将减法转换为了加法</p><h3 id="所以补码有符号位"><a href="#所以补码有符号位" class="headerlink" title="所以补码有符号位"></a>所以补码有符号位</h3><p>假设是8位补码系统，[00000000,01111111]是正数，[10000000,11111111]是负数<br>根据负数求补码的公式：x是真值，x&lt;0, [x]补 &#x3D; 256+x &#x3D;&#x3D;&#x3D;&#x3D;&gt; x&#x3D;[x]补-256,得到了根据补码求真值的<strong>普遍方法</strong>(<strong>适用于任何补码</strong>):<br>[-1]补&#x3D;256+(-1)&#x3D;255&#x3D;11111111    ，-1  &#x3D;补码11111111-256<br>[-127]补&#x3D;256+(-127)&#x3D;129&#x3D;10000001，-127&#x3D;补码10000001-256 </p><p>特殊的-128来了<br>[-128]补&#x3D;256+(-128)&#x3D;128&#x3D;10000000  ,-128&#x3D;补码10000000-256,<strong>所以补码10000000的真值为-128</strong></p><p>已知补码求真值，<strong>一般方法</strong>可以是：补码-1求得反码，反码求原码，再求真值<br>补码11111111，反码11111110，原码10000001，真值-1<br>补码10000001，反码10000000，原码11111110，真值-127</p><p>但是特殊的补码10000000呢？<br>补码10000000，反码01111111，原码10000000，真值-0    这个肯定是错误的，-0在计算机中以00000000的补码形式存储，与+0一样<br>其实这里开始就错了：<br><strong>普遍方法</strong>中求得的真值永远是对的，所以补码为10000000&#x3D;&gt;符号位为1，所以是负数，所以按照公式[x]补 &#x3D; 256+x求真值x,x&#x3D;10000000-256&#x3D;-10000000&#x3D;-128<br>我们知道真值-128，不存在8位原码，8位反码，所以不能根据这种<strong>一般方法</strong>求</p><p>所以为了不出错，我们需要记住10000000这个特殊的机器数，不存在原码，反码，所以补码求原码这种算法不存在</p><h2 id="这就是特殊的机器数，1……-1后面n-1个0（假设机器字长为n位）"><a href="#这就是特殊的机器数，1……-1后面n-1个0（假设机器字长为n位）" class="headerlink" title="这就是特殊的机器数，1……..,1后面n-1个0（假设机器字长为n位）"></a>这就是特殊的机器数，1……..,1后面n-1个0（假设机器字长为n位）</h2>]]></content>
      
      
      <categories>
          
          <category> 计算机系统基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++之函数过程调用.md</title>
      <link href="/2024/10/29/C-%E4%B9%8B%E5%87%BD%E6%95%B0%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8-md/"/>
      <url>/2024/10/29/C-%E4%B9%8B%E5%87%BD%E6%95%B0%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8-md/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>日常杂记.md</title>
      <link href="/2024/10/29/%E6%97%A5%E5%B8%B8%E6%9D%82%E8%AE%B0-md/"/>
      <url>/2024/10/29/%E6%97%A5%E5%B8%B8%E6%9D%82%E8%AE%B0-md/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 日常杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>English.md</title>
      <link href="/2024/10/29/English/"/>
      <url>/2024/10/29/English/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> English日常学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>内联汇编与宏</title>
      <link href="/2024/10/29/%E5%86%85%E8%81%94%E6%B1%87%E7%BC%96%E4%B8%8E%E5%AE%8F/"/>
      <url>/2024/10/29/%E5%86%85%E8%81%94%E6%B1%87%E7%BC%96%E4%B8%8E%E5%AE%8F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> x86汇编基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>分页机制</title>
      <link href="/2024/10/29/%E5%88%86%E9%A1%B5%E6%9C%BA%E5%88%B6/"/>
      <url>/2024/10/29/%E5%88%86%E9%A1%B5%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>有趣的C</title>
      <link href="/2024/10/29/C%E4%B8%8E%E5%BC%82%E5%B8%B8/"/>
      <url>/2024/10/29/C%E4%B8%8E%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Linux C基础 </category>
          
          <category> 有趣的C </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux C基础</title>
      <link href="/2024/10/29/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
      <url>/2024/10/29/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux历史"><a href="#Linux历史" class="headerlink" title="Linux历史"></a>Linux历史</h1><p>linus出生于….</p><p>下面是一段javaScript代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;%! %&gt;</span><br><span class="line"><span class="keyword">let</span> a = b;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;kaskk&#x27;</span>);</span><br></pre></td></tr></table></figure><p>下面是一段C代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是一段C++代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> main</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是一段JAva代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Cars</span> <span class="keyword">extends</span> <span class="title class_">String</span>(String str)&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux C基础 </category>
          
          <category> Linux基本操作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++之内存管理</title>
      <link href="/2024/10/29/C++%E4%B9%8B%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
      <url>/2024/10/29/C++%E4%B9%8B%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> C++系列 </category>
          
          <category> C++内存管理 </category>
          
          <category> 内存分配函数malloc </category>
          
          <category> 内存销毁函数malloc </category>
          
          <category> C++ const的作用 </category>
          
          <category> const变量 </category>
          
          <category> const函数 </category>
          
          <category> C++ 域 </category>
          
          <category> auto </category>
          
          <category> static </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机体系结构</title>
      <link href="/2024/10/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/"/>
      <url>/2024/10/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p>计算机体系结构，包括寄存器，补码加减器，浮点数寄存器(x87)，过程调用，虚拟器内存管理等知识</p><h2 id="x86汇编基础"><a href="#x86汇编基础" class="headerlink" title="x86汇编基础"></a>x86汇编基础</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h2 id="操作系统基础"><a href="#操作系统基础" class="headerlink" title="操作系统基础"></a>操作系统基础</h2><h3 id="操作系统分页机制"><a href="#操作系统分页机制" class="headerlink" title="操作系统分页机制"></a>操作系统分页机制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> x86汇编基础 </category>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>利用GitHub和HEXO免费搭建个人博客高级 美化篇</title>
      <link href="/2019/01/29/hello-world/"/>
      <url>/2019/01/29/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
